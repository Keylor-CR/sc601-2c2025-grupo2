@model IEnumerable<SinpeEmpresarial.Application.Dtos.Bitacora.BitacoraEventoDto>

@{
    ViewBag.Title = "Bitácora de Eventos";
}

<style>
    .table-striped tbody tr:nth-of-type(odd) { background-color: #f8f9fa; }
    .table th { background-color: #e9ecef; font-weight: 600; border-right: 1px solid #dee2e6; }
    .table td { border-right: 1px solid #dee2e6; }
    .badge-success { background-color: #28a745; }
    .badge-danger { background-color: #dc3545; }
    .badge-info { background-color: #17a2b8; }
    .text-truncate { max-width: 200px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }
</style>

<h2>Bitácora de Eventos</h2>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>ID</th>
            <th>Tabla</th>
            <th>Tipo</th>
            <th>Fecha</th>
            <th>Descripcion</th>
            <th>Error</th>
            <th>Datos Previos</th>
            <th>Datos Posteriores</th>
        </tr>
    </thead>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.IdEvento)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TablaDeEvento)
            </td>
            <td>
                @if (item.TipoDeEvento == "Error")
                {
                    <span class="badge badge-danger">@item.TipoDeEvento</span>
                }
                else if (item.TipoDeEvento == "Registrar")
                {
                    <span class="badge badge-success">@item.TipoDeEvento</span>
                }
                else if (item.TipoDeEvento == "Editar")
                {
                    <span class="badge bg-warning">@item.TipoDeEvento</span>
                }
                else
                {
                    <span class="badge badge-info">@item.TipoDeEvento</span>
                }
            </td>
            <td>
                @item.FechaDeEvento.ToString("dd/MM/yyyy HH:mm")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DescripcionDeEvento)
            </td>
            <td>
                @if (!string.IsNullOrWhiteSpace(item.StackTrace))
                {
                    <span title="@item.StackTrace">@item.StackTrace.Substring(0, Math.Min(30, item.StackTrace.Length))...</span>
                }
            </td>
            <td>
                @if (!string.IsNullOrWhiteSpace(item.DatosAnteriores))
                {
                    <span title="@item.DatosAnteriores">@item.DatosAnteriores.Substring(0, Math.Min(30, item.DatosAnteriores.Length))...</span>
                }
            </td>
            <td>
                @if (!string.IsNullOrWhiteSpace(item.DatosPosteriores))
                {
                    <span title="@item.DatosPosteriores">@item.DatosPosteriores.Substring(0, Math.Min(30, item.DatosPosteriores.Length))...</span>
                }
            </td>
        </tr>
    }

</table>
